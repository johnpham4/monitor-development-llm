import gradio as gr
import requests
import json
import os

API_BASE_URL = os.getenv("API_BASE_URL", "http://127.0.0.1:8000/api/v1")

def stream_chat_response(message, history):
    new_history = history + [[message, ""]]
    yield new_history
    try:
        payload = {"message": message, "max_tokens": 256}
        response = requests.post(
            f"{API_BASE_URL}/chat/stream",
            json=payload,
            stream=True,
            timeout=60
        )

        accumulated = ""
        for line in response.iter_lines():
            if line:
                decoded = line.decode("utf-8")
                if decoded.startswith("data: "):
                    data_str = decoded[6:]
                    if data_str.strip() == "[DONE]":
                        break
                    try:
                        data = json.loads(data_str)
                        if "content" in data:
                            accumulated += data["content"]
                        elif "delta" in data and "content" in data["delta"]:
                            accumulated += data["delta"]["content"]

                        new_history[-1][1] = accumulated
                        yield new_history
                    except:
                        continue
    except Exception as e:
        new_history[-1][1] = f"L·ªói: {str(e)}"
        yield new_history

def clear():
    return [], ""


with gr.Blocks(title="Chatbot Lu·∫≠t Vi·ªát Nam") as demo:
    gr.Markdown("<h2 style='text-align:center;'>Chatbot Lu·∫≠t Vi·ªát Nam</h2>")

    chatbot = gr.Chatbot()

    with gr.Row():
        msg = gr.Textbox(placeholder="Nh·∫≠p c√¢u h·ªèi...", show_label=False, scale=8)
        send = gr.Button("G·ª≠i", scale=1)
        clear_btn = gr.Button("X√≥a", scale=1)

    def submit(message, history):
        if not message or not message.strip():
            return history, ""
        for update in stream_chat_response(message, history):
            yield update, ""

    send.click(submit, [msg, chatbot], [chatbot, msg])
    msg.submit(submit, [msg, chatbot], [chatbot, msg])
    clear_btn.click(clear, [], [chatbot, msg])

    # Examples
    gr.Markdown("### üí° C√¢u h·ªèi m·∫´u:")

    examples = [
        "Theo ƒêi·ªÅu 161 D·ª± th·∫£o Lu·∫≠t Kinh doanh b·∫£o hi·ªÉm (s·ª≠a ƒë·ªïi), c∆° quan qu·∫£n l√Ω nh√† n∆∞·ªõc v·ªÅ ho·∫°t ƒë·ªông kinh doanh b·∫£o hi·ªÉm ho·∫°t ƒë·ªông tr√™n nh·ªØng nguy√™n t·∫Øc n√†o?",
        "D·ª±a v√†o ƒêi·ªÅu 59 c·ªßa Lu·∫≠t H√†ng kh√¥ng d√¢n d·ª•ng Vi·ªát Nam, ch·ª©c nƒÉng ch√≠nh c·ªßa C·∫£ng v·ª• h√†ng kh√¥ng l√† g√¨?",
        "M·ªôt c√¥ng d√¢n Vi·ªát Nam sinh con ·ªü n∆∞·ªõc ngo√†i v√† mu·ªën n·ªôp h·ªì s∆° h∆∞·ªüng ch·∫ø ƒë·ªô thai s·∫£n t·∫°i Vi·ªát Nam. Theo ƒêi·ªÅu 61 c·ªßa Lu·∫≠t B·∫£o hi·ªÉm x√£ h·ªôi, gi·∫•y t·ªù n√†y c·∫ßn ƒë√°p ·ª©ng nh·ªØng y√™u c·∫ßu g√¨?",
        "Theo ƒêi·ªÅu 8 c·ªßa Lu·∫≠t Thi h√†nh √°n d√¢n s·ª±, ng∆∞·ªùi phi√™n d·ªãch c√≥ nh·ªØng tr√°ch nhi·ªám g√¨ v√† ph·∫£i ch·ªãu tr√°ch nhi·ªám nh∆∞ th·∫ø n√†o n·∫øu c·ªë √Ω d·ªãch sai?",
        "ƒêi·ªÅu 37 c·ªßa D·ª± th·∫£o Lu·∫≠t Giao th√¥ng ƒë∆∞·ªùng b·ªô (s·ª≠a ƒë·ªïi) quy ƒë·ªãnh g√¨ v·ªÅ vi·ªác thi c√¥ng x√¢y d·ª±ng, s·ª≠a ch·ªØa ƒë∆∞·ªùng b·ªô ·ªü n∆°i giao nhau ƒë·ªìng m·ª©c v·ªõi ƒë∆∞·ªùng s·∫Øt?"
    ]

    def set_example_question(example_text):
        return example_text, []

    # Hi·ªÉn th·ªã theo 2 c·ªôt
    with gr.Row():
        with gr.Column():
            for i, example in enumerate(examples):
                if i % 2 == 0:  # c·ªôt 1
                    short_text = example[:80] + "..." if len(example) > 80 else example
                    example_btn = gr.Button(f"üìã {short_text}")
                    example_btn.click(
                        fn=set_example_question,
                        inputs=[gr.State(example)],
                        outputs=[msg, chatbot]
                    )
        with gr.Column():
            for i, example in enumerate(examples):
                if i % 2 != 0:  # c·ªôt 2
                    short_text = example[:80] + "..." if len(example) > 80 else example
                    example_btn = gr.Button(f"üìã {short_text}")
                    example_btn.click(
                        fn=set_example_question,
                        inputs=[gr.State(example)],
                        outputs=[msg, chatbot]
                    )

    gr.Markdown("<p style='text-align:center;color:#666;font-size:13px;'>L∆∞u √Ω: Chatbot ch·ªâ h·ªó tr·ª£ tham kh·∫£o, kh√¥ng thay th·∫ø t∆∞ v·∫•n ph√°p l√Ω.</p>")

if __name__ == "__main__":
    demo.launch(server_name="0.0.0.0", server_port=7860)
